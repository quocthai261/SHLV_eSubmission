@using eSubmission.Models
@using eSubmission.Areas.Admin.Controllers
@using Microsoft.AspNetCore.Mvc.Localization

@inject IHtmlLocalizer<UsersController> HtmlLocalizer

@{
    var userNameLabel = String.Format(@HtmlLocalizer["UserNameLabel"].Value);
    var fullNameLabel = String.Format(@HtmlLocalizer["FullNameLabel"].Value);
    var emailLabel = String.Format(@HtmlLocalizer["EmailLabel"].Value);
    var phoneLabel = String.Format(@HtmlLocalizer["PhoneLabel"].Value);
    var userGroupPlaceHolder = String.Format(@HtmlLocalizer["UserGroupPlaceHolder"].Value);
    var userGroupLabel = String.Format(@HtmlLocalizer["UserGroupLabel"].Value);
    var userTypeLabel = String.Format(@HtmlLocalizer["UserTypeLabel"].Value);
    var confirmDeleteMessage = String.Format(@HtmlLocalizer["ConfirmDeleteMessage"].Value); 
    var confirmDeleteTitle = String.Format(@HtmlLocalizer["ConfirmDeleteTitle"].Value);
    var isActive = String.Format(@HtmlLocalizer["IsActive"].Value);  
}
 
<div class="container-fluid p-0"> 

    <h1 class="h4 mb-3 form-title"><strong>@HtmlLocalizer["AccountManagement"]</strong></h1>
    <div class="row">
        <div class="col-12 col-md-12 col-xxl-6 d-flex order-3 order-xxl-2">
            <div class="card flex-fill w-100 form-control-ui">
                <div class="card-header">
                    <h5 class="card-title mb-0">Filter</h5>
                    <button class="btn btn-purple-invert btn-filter" type="submit"><i class="bi bi-plus"></i> @HtmlLocalizer["AddUsers"]</button>
                </div>
                <div class="card-body py-3">
                    <div class="row">
                        <div class="col-md-4 col-sm-6 col-xs-12">
                            <div class="form-group">
                                @(Html.DevExtreme().TextBox()
                                    .Label(userNameLabel).LabelMode(EditorLabelMode.Floating)
                                    .MaxLength(50).ShowClearButton(true))
                            </div>
                        </div>

                        <div class="col-md-4 col-sm-6 col-xs-12">
                            <div class="form-group">
                                @(Html.DevExtreme().TextBox()
                                    .Label(fullNameLabel).LabelMode(EditorLabelMode.Floating)
                                    .MaxLength(100).ShowClearButton(true))
                            </div>
                        </div>

                        <div class="col-md-4 col-sm-6 col-xs-12 p-l-r-5">
                            <div class="form-group">
                                @(Html.DevExtreme().TextBox()
                                    .Label(emailLabel).LabelMode(EditorLabelMode.Floating)
                                    .MaxLength(100).ShowClearButton(true))
                            </div>
                        </div>

                        <div class="col-md-4 col-sm-6 col-xs-12 p-r-r-5">
                            <div class="form-group">
                                @(Html.DevExtreme().TextBox()
                                    .Label(phoneLabel).LabelMode(EditorLabelMode.Floating)
                                    .MaxLength(100).ShowClearButton(true))
                            </div>
                        </div>

                        <div class="col-md-4 col-sm-6 col-xs-12 p-l-r-5 p-r-r-5">
                            <div class="form-group">
                                @(Html.DevExtreme().SelectBox()
                                    .ID("userGroup")
                                    .DataSource(d => d.WebApi().Area("Admin").Controller("Users").LoadAction("GetRoleList"))
                                    .DisplayExpr("Name")
                                    .ValueExpr("RoleId")
                                    .Placeholder(userGroupPlaceHolder)
                                    .SearchEnabled(true).Label(userGroupLabel).LabelMode(EditorLabelMode.Floating)
                                    .ShowClearButton(true)
                                    )
                            </div>
                        </div>

                        <div class="col-md-4 col-sm-6 col-xs-12 p-l-r-5">
                            <div class="form-group">
                                @(Html.DevExtreme().SelectBox()
                                    .ID("userType")
                                    .DataSource(d => d.WebApi().Area("Admin").Controller("Users").LoadAction("GetUserTypeList"))
                                    .DisplayExpr("Name")
                                    .ValueExpr("ID")
                                    .Placeholder(userGroupPlaceHolder)
                                    .SearchEnabled(true).Label(userTypeLabel).LabelMode(EditorLabelMode.Floating)
                                    .ShowClearButton(true)
                                    )
                            </div>
                        </div>
                    </div>
                    <div class="row button-search-row">
                        <div class="col-md-12">
                            <button class="btn btn-purple-style" type="submit">@HtmlLocalizer["Delete"]</button>
                            <button class="btn btn-purple-style" type="submit">@HtmlLocalizer["Search"]</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-12 col-md-12 col-xxl-6 d-flex order-3 order-xxl-2"> 
            <div class="card flex-fill w-100 form-control-ui">
                <div class="card-body py-3">
                    @(Html.DevExtreme().DataGrid()
                        .ID("gridUsers")
                        .DataSource(d => d.WebApi()
                        .RouteName("Admin")
                        .Controller("Users")
                        .LoadAction("GetUserList")
                        .DeleteAction("Delete")
                        .Key("UserId")
                        )
                        .ShowBorders(true)
                        .Selection(s => s.Mode(SelectionMode.Single))
                        .Export(e => e.Enabled(true).AllowExportSelectedData(false)).OnExporting("exportingGridUsers")
                            .Editing(editing =>
                            {
                                editing.Texts(textBuilder =>
                            {
                                textBuilder.ConfirmDeleteMessage(confirmDeleteMessage);
                                textBuilder.ConfirmDeleteTitle(confirmDeleteTitle);
                            });
                            })
                        .Columns(columns =>
                            {
                                columns.Add().Caption("").Width(100)
                                        .CellTemplate(@<text>
                                            <div class="dropdown">
                                                <a class="dropbtn">@HtmlLocalizer["ActionOnGrid"]</a>
                                                <div class="dropdown-content">
                                                    <form asp-area="Admin" asp-controller="Users"
                                                          asp-action="Edit" method="post" id="Edit<%= data.UserId %>">
                                                        <input type="hidden" name="userId" value="<%= data.UserId %>" />
                                                    </form>
                                                    <a href="javascript:document.getElementById('Edit<%= data.UserId %>').submit()">
                                                        @HtmlLocalizer["EditOnGrid"]
                                                    </a>
                                                    <a href="#" onclick="deleteRow('<%= rowIndex %>', '<%= data.USERNAME %>')" title="Delete">
                                                        @HtmlLocalizer["DeleteOnGrid"]
                                                    </a>
                                                </div>
                                            </div>
                                        </text>);
                                columns.Add().DataField(nameof(SysUsersModelExt.UserName)).Caption(userNameLabel).Width(200);
                                columns.Add().DataField(nameof(SysUsersModelExt.FullName)).Caption(fullNameLabel);
                                columns.Add().DataField(nameof(SysUsersModelExt.Email)).Caption(emailLabel).Width(200);
                                columns.Add().DataField(nameof(SysUsersModelExt.Phone)).Caption(phoneLabel).Width(200);
                                columns.Add().DataField(nameof(SysUsersModelExt.IsActive)).Caption(isActive).Width(150).DataType(GridColumnDataType.Boolean).Alignment(HorizontalAlignment.Center);
                            })
                        .ColumnHidingEnabled(true)
                        .AllowColumnResizing(true)
                        .ColumnAutoWidth(true)
                        .ColumnMinWidth(50)
                        .ShowRowLines(true)
                        .FilterRow(f => f.Visible(true))
                        .HeaderFilter(f => f.Visible(false))
                        .GroupPanel(p => p.Visible(false))
                        .Grouping(g => g.AutoExpandAll(false))
                        .RemoteOperations(false)
                        .Paging(paging => paging.PageSize(5))
                        .Pager(pager =>
                        {
                            pager.ShowPageSizeSelector(true);
                            pager.AllowedPageSizes(new[] { 5, 10, 20 });
                            pager.ShowInfo(true);
                        })
                        )
                </div>
            </div>
        </div>
    </div>
</div>

<script>

    function exportingGridUsers(e) {
        var workbook = new ExcelJS.Workbook();
        var worksheet = workbook.addWorksheet('Users');

        DevExpress.excelExporter.exportDataGrid({
            component: e.component,
            worksheet: worksheet,
            autoFilterEnabled: true
        }).then(function () {
            workbook.xlsx.writeBuffer().then(function (buffer) {
                saveAs(new Blob([buffer], { type: 'application/octet-stream' }), 'UsersList.xlsx');
            });
        });
        e.cancel = true;
    }

    function deleteRow(rowindex, name) {
        var dataGrid = $("#gridUsers").dxDataGrid("instance");
        dataGrid.deleteRow(rowindex);
    };
</script>
