@model TreeMenuItem<SiteMapNode>
@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer ViewLocalizer

@{
    var id = Model.Item.ID;
    var content = @ViewLocalizer[Model.Item.CONTENT];
    var iconClass = Model.Item.ICONCLASS;
    var url = Model.Item.URL_;
    var activeMenuItemSystemName = Model.CurrentSystemName;
    var isDisplay = Model.Item.ISACTIVE && Model.Item.ISDISPLAY;
    var hasChilds = Model.Children != null && Model.Children.Any();
    var isActive = false;
}

@if (isDisplay)
{
    <li>
        @if (hasChilds)
        {
            <a @(isActive ? Html.Raw("class=\"active\"") : Html.Raw("class=\"collapsed\"")) data-toggle="collapse" data-target="#ServiceNavbar_@id">
                <i class="@iconClass main-color"></i>&nbsp;
                @content
                <i class="fa fa-caret-up main-color"></i>
            </a>
            <div @(isActive ? Html.Raw("class=\"collapse in\"") : Html.Raw("class=\"collapse\"")) id="ServiceNavbar_@id">
                <ul>
                    @foreach (var item in Model.Children)
                    {
                        item.CurrentSystemName = activeMenuItemSystemName;
                        @await Html.PartialAsync("_MenuItem", item)
                    }
                </ul>
            </div>
        }
        else
        {
            <a href="@Url.Content("~/" + url)" @(isActive ? Html.Raw("class=\"active\"") : null)>
                <i class="@iconClass main-color"></i>&nbsp;
                @content
            </a>
        }
    </li>
}